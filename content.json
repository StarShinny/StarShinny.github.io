{"meta":{"title":"StarShinny's blog","subtitle":"Dance like nobody's Watching. Love like you've never been hurt.","description":null,"author":"StarShinny","url":"http://starshinny.github.io"},"pages":[{"title":"","date":"2017-08-14T03:17:51.000Z","updated":"2017-08-14T03:17:51.000Z","comments":true,"path":"404.html","permalink":"http://starshinny.github.io/404.html","excerpt":"","text":"layout: 404title: “[404]”description: “Have a good day :&#41;”"}],"posts":[{"title":"Flex布局","slug":"flex-layout","date":"2017-07-31T06:36:48.000Z","updated":"2017-08-15T03:23:09.000Z","comments":true,"path":"2017/07/31/flex-layout/","link":"","permalink":"http://starshinny.github.io/2017/07/31/flex-layout/","excerpt":"","text":"&nbsp;&nbsp;今天，照着阮一峰的Flex布局教程，通过骰子的例子，更加系统化地熟悉了Flex布局。Flex是Flexible Box的缩写，意为“弹性布局”，较盒装模型(position + display + float)布局变得更加简单。本文只是对该布局使用到的属性进行归纳总结。&nbsp;&nbsp;容器的属性：主要定义轴线方向及对齐方式(6种) flex-direction: row(default) | row-reverse | column | column-reverse 该属性决定主轴的方向； flex-wrap: nowrap(default) | wrap | wrap-reverse 该属性定义当项目在轴线上排不下时，该如何换行。默认会缩小各个item，并不会换行； flex-flow: &lt;’flex-direction’&gt; || &lt;’flex-wrap’&gt; 默认为row nowrap； justify-content: flex-start(default) | flex-end | center | space-between | space-around 该属性用于设置项目在主轴上的对齐方式； align-items: flex-start | flex-end | center | baseline |strech(default) 该属性用于设置项目在交叉轴的对齐方式； align-content: flex-start | flex-end | center | space-between | space-around | stretch(default) 多根轴线的对齐方式可优先使用flex-flow, justify-content, align-items, align-content这4个属性。 &nbsp;&nbsp;项目的属性：主要定义项目的大小、缩放、对齐方式(6种) order: 定义项目的排列顺序，数值越小，排列越靠前，默认为0； flex-grow: 默认为0，即及时存在剩余空间也不放大，值越大，放大的倍数越多； flex-shrink: 默认为1，当空间不足时，该项目将缩小。为0，则表示不缩小； flex-basis: | auto 项目占据的主轴空间，默认为auto，即项目本来的大小，设置网格布局时，可以通过该属性设定百分比来固定项目所占的空间； flex: none | [&lt;’flex-grow’&gt;, &lt;’flex-shrink’&gt;? || &lt;’flex-basis’&gt;]，有两个快捷值：auto: 1 1 auto 和none: 0 0 auto； align-self: 可覆盖align-items，用于项目设置不同的对齐方式。可优先使用order, flex, align-self属性。 其实，容器和项目中可设置的属性也是一种关注点分离。容器关注的是大局的轴线方向，对齐方式；容器中包含的项目关注的是自身的大小及自身的对齐方式。","categories":[],"tags":[{"name":"Flex","slug":"Flex","permalink":"http://starshinny.github.io/tags/Flex/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-07-28T08:00:35.000Z","updated":"2017-07-28T08:00:35.000Z","comments":true,"path":"2017/07/28/hello-world/","link":"","permalink":"http://starshinny.github.io/2017/07/28/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}